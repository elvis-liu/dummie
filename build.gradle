apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'java'

group = 'com.exmertec.dummie'
archivesBaseName = "dummie"
version = '0.2.1'

repositories {
    mavenCentral()
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

if (project.hasProperty("signing.keyId")) {
    apply plugin: 'signing'
    signing {
        sign configurations.archives
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'dummie'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'When writing functional testing in Java enterprise application, it\'s always a pain to initialize entity objects, this library generates entity objects automatically, and you can change just the fields you want to control for testing.'
                url 'https://github.com/elvis-liu/dummie'

                scm {
                    connection 'scm:git:https://github.com/elvis-liu/dummie.git'
                    developerConnection 'scm:git:https://github.com/elvis-liu/dummie.git'
                    url 'https://github.com/elvis-liu/dummie.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'elvis-liu'
                        name 'Elvis Liu'
                        email 'elvisliu.cs@gmail.com'
                    }
                    developer {
                        id 'yeyuexia'
                        name 'yeyuexia'
                        email 'yyxworld@gmail.com'
                    }
                }
            }
        }
    }
}

idea {
    project {
        languageLevel = '1.8'

        ipr {
            withXml { provider ->
                provider.node.component
                        .find { it.@name == 'VcsDirectoryMappings' }
                        .mapping.@vcs = 'Git'
            }
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    testCompile 'junit:junit:4.12'

    compile 'commons-beanutils:commons-beanutils:1.9.3'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}

